<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.mybatis.mapper.UserMapper">
    <select id = "selectUserAgeById" resultType = "java.lang.Integer">
        select age from imooc_user where id = #{id}
    </select>

<!--    <select id = "selectUserByAgeAndScoreWithXml"-->
<!--            parameterType = "com.imooc.mybatis.entity.User"-->
<!--            resultType = "com.imooc.mybatis.entity.User">-->
<!--        select id,-->
<!--               username,-->
<!--               age,-->
<!--               score-->
<!--        from imooc_user-->
<!--        where age = #{age} and score = #{score}-->
<!--    </select>-->

<!--    等价于-->
    <select id = "selectUserByAgeAndScoreWithXml"
            parameterType = "com.imooc.mybatis.entity.User"
            resultType = "com.imooc.mybatis.entity.User">
        <include refid="selectUser" />
        where age = #{age} and score = #{score}
    </select>

    <select id="selectUsernameAndAgeWithXml" resultMap="usernameAndAge">
        <include refid="selectUser" />
    </select>

    <resultMap id="usernameAndAge" type="com.imooc.mybatis.model.UserShortCut">
        <result property="username" column="username" />
        <result property="age" column="age" />
    </resultMap>

    <sql id="selectUser">
        select * from imooc_user
    </sql>

    <insert id="insertUserWithXml" parameterType="com.imooc.mybatis.entity.User">
        insert into imooc_user(id, username, age, score)
        values(#{id}, #{username}, #{age}, #{score})
    </insert>

    <insert id="insertUserNoIdWithXml" parameterType="com.imooc.mybatis.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into imooc_user(username, age, score)
        values(#{username}, #{age}, #{score})
    </insert>

    <update id="updateAgeByIdWithXml" parameterType="com.imooc.mybatis.entity.User">
        update imooc_user set age = #{age}
        where id = #{id}
    </update>

    <delete id="deleteUserByIdWithXml" parameterType="com.imooc.mybatis.entity.User">
        delete from imooc_user where id = #{id}
    </delete>

    <select id="ognlOr" parameterType="com.imooc.mybatis.entity.User" resultType="com.imooc.mybatis.entity.User">
        select id,
               username,
               age,
               score
        from imooc_user
        where username = #{username}
        <if test="age != null and age > 0">
            and age = #{user.age}
        </if>
    </select>

    <select id="selectUserByNameConditionWithXml" parameterType="com.imooc.mybatis.entity.User"
            resultType="com.imooc.mybatis.entity.User">
        select id,
               username,
               age,
               score
        from imooc_user
        where username = #{username}
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="score != null">
                and score = #{score}
            </if>
    </select>

    <select id="selectUserByIdOrNameWithXml" parameterType="com.imooc.mybatis.entity.User"
            resultType="com.imooc.mybatis.entity.User">
        select *
        from imooc_user
        where
            <choose>
                <when test="id != null">
                    id = #{id}
                </when>
                <when test="username != null">
                    username = #{username}
                </when>
                <otherwise>
                    1 = 1
                </otherwise>
            </choose>
    </select>

    <select id="selectUserByWhereWithXml" parameterType="com.imooc.mybatis.entity.User"
            resultType="com.imooc.mybatis.entity.User">
        select *
        from imooc_user
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="username != null">
                and username = #{username}
            </if>
        </where>
    </select>

<!--    由于 SQL update 的语法问题，若 set 标签里面条件均不满足，此时 set 标签也不会添加上 SET 前缀，-->
<!--    但此时 SQL 会报语法错误，所以 set 标签中还是得有一个必然存在的赋值。-->
    <update id="updateUsernameAndScoreByIdWithXml"
            parameterType="com.imooc.mybatis.entity.User">
        update imooc_user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            id = #{id}
        </set>
        where id = #{id}
    </update>

    <insert id="insertUserIfNameNotEmptyWithXml" parameterType="com.imooc.mybatis.entity.User">
        insert into imooc_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="age">
                age,
            </if>
            <if test="score">
                score,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username},
            </if>
            <if test="age != null">
                #{age},
            </if>
            <if test="score != null">
                #{score},
            </if>
        </trim>
    </insert>

    <select id="selectUserByNamesWithXml" resultType="com.imooc.mybatis.entity.User">
        select id,
            username,
            age,
            score
        from imooc_user
        where username in
            <foreach collection="names" open="(" close=")" item="name" separator=",">
                #{name}
            </foreach>
    </select>

    <insert id="insertBatchUserWithXml">
        insert into imooc_user(username, age, score)
        values
            <foreach collection="users" item="user" separator=",">
                (#{user.username}, #{user.age}, #{user.score})
            </foreach>
    </insert>

    <select id="selectUserByNamesWithXmlToArray" resultType="com.imooc.mybatis.entity.User">
        select id,
        username,
        age,
        score
        from imooc_user
        where username in
        <foreach collection="names" open="(" close=")" item="name" separator=",">
            #{name}
        </foreach>
    </select>

    <select id="selectUserByNamesWithXmlToMap" resultType="com.imooc.mybatis.entity.User">
        select id,
            username,
            age,
            score
        from imooc_user
        where
        -- 由于 key 是字段名称，因此不能使用#{}作为占位符，只能使用${}在字符串中替换。
        <foreach collection="params" open="(" close=")" item="value" index="key" separator=" and ">
            ${key} = #{value}
        </foreach>
    </select>
</mapper>